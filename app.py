from flask import Flask, request, jsonify
from openai import OpenAI
import os
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from fuzzywuzzy import fuzz
import re

app = Flask(__name__)

# ==== OpenAI Client ====
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# ==== Google Sheets ====
scope = ["https://spreadsheets.google.com/feeds",
         "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
gs_client = gspread.authorize(creds)

SHEET_ID = os.getenv("GOOGLE_SHEET_ID")
sheet = gs_client.open_by_key(SHEET_ID).worksheet("FAQ")  # ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ä‡∏µ‡∏ó‡∏ä‡∏∑‡πà‡∏≠ FAQ


@app.route("/", methods=["GET"])
def home():
    return "‚úÖ FAQ Bot is running with Google Sheets", 200


@app.route("/manychat", methods=["POST"])
def manychat():
    try:
        data = request.get_json(silent=True) or {}
        user_message = (data.get("message") or "").strip().lower()

        if not user_message:
            return jsonify({
                "content": {"messages": [{"text": "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"}]}
            }), 200

        # ===== 1) ‡∏î‡∏±‡∏Å‡∏Ñ‡∏≥‡∏ï‡πâ‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏° (‡∏£‡∏≤‡∏Ñ‡∏≤/‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á/‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó) =====
        restricted_patterns = [
            r"‡∏£‡∏≤‡∏Ñ‡∏≤", r"‡πÄ‡∏ó‡πà‡∏≤", r"‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó",
            r"‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á", r"‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á",
            r"‡∏™‡∏±‡πà‡∏á(‡∏ã‡∏∑‡πâ‡∏≠)?", r"‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°", r"‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ"
        ]
        if any(re.search(p, user_message) for p in restricted_patterns):
            reply_text = "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö üôè ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö üëâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"
            return jsonify({
                "content": {"messages": [{"text": reply_text}]}
            }), 200

        # ===== 2) ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å Google Sheet =====
        records = sheet.get_all_records()
        matched = []

        for row in records:
            name = row.get("‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "").strip()
            answer = row.get("‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö", "").strip()
            keywords = str(row.get("‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î", "")).split(",")
            for kw in keywords:
                kw = kw.strip()
                if not kw:
                    continue
                if kw in user_message or fuzz.partial_ratio(kw, user_message) > 80:
                    matched.append({"name": name, "answer": answer})
                    break

        # ===== 3) ‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à =====
        if len(matched) == 0:
            # ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‚Üí ‡πÉ‡∏´‡πâ GPT ‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏ä‡∏ß‡∏ô‡∏ö‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            prompt = f"""
‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå: "{user_message}"
‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå ‡∏ï‡∏≠‡∏ö‡∏™‡∏±‡πâ‡∏ô ‡πÜ (1-2 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ) 
- ‡∏ä‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ö‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à
- ‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ‡πÑ‡∏ü‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå, ‡∏´‡∏°‡πâ‡∏≠‡∏´‡∏∏‡∏á‡∏Ç‡πâ‡∏≤‡∏ß, ‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü
- ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏™‡πà‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö [] ‡∏´‡∏£‡∏∑‡∏≠ {{}}
"""
            resp = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=[
                    {"role": "system", "content": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå ‡∏û‡∏π‡∏î‡∏™‡∏∏‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á"},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.8,
                max_tokens=120
            )
            reply_text = resp.choices[0].message.content.strip()

        elif len(matched) == 1:
            # ‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‚Üí ‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏•‡∏¢
            product = matched[0]
            reply_text = f"‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö üôå ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ {product['name']} ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏Ñ‡∏£‡∏±‡∏ö üëâ {product['answer']}"

        elif 2 <= len(matched) <= 4:
            # 2-4 ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‚Üí ‡∏™‡πà‡∏á‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå
            items = "\n".join([f"- {m['name']} üëâ {m['answer']}" for m in matched])
            reply_text = f"‡πÄ‡∏£‡∏≤‡πÄ‡∏à‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ö üëá\n{items}"

        else:
            # ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 4 ‚Üí ‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            names = "\n".join([f"- {m['name']}" for m in matched[:5]])
            reply_text = (
                "‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏µ‡πâ ‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö üòä\n"
                f"{names}\n\n"
                "‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ú‡∏°‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏±‡∏ö üôè"
            )

        # ===== 4) ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏ö‡∏ö ManyChat =====
        return jsonify({
            "content": {
                "messages": [{"text": reply_text}]
            }
        }), 200

    except Exception as e:
        return jsonify({
            "content": {
                "messages": [{"text": f"‚ö†Ô∏è ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}"}]
            }
        }), 200


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 5000)))
